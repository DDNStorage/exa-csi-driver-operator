# ----------------------
# Exascaler CSI Driver
# ----------------------

apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: exa.csi.ddn.com
spec:
  attachRequired: false
  podInfoOnMount: false
---

# ---------------------------------
# Exascaler CSI Controller Server
# ---------------------------------
#
# Runs single driver controller server (driver + provisioner + attacher + snapshotter) on one of the nodes
#

kind: Service
apiVersion: v1
metadata:
  name: exascaler-csi-controller-service
  labels:
    app: exascaler-csi-controller
spec:
  selector:
    app: exascaler-csi-controller
  ports:
    - name: dummy
      port: 12345
---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: exascaler-csi-controller
  namespace: {{ .Values.Namespace }}
spec:
  # serviceName: exascaler-csi-controller-service
  selector:
    matchLabels:
      app: exascaler-csi-controller # has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: exascaler-csi-controller
    spec:
      serviceAccount: exascaler-csi-driver-service-account
      priorityClassName: {{ .Values.priorityClassName }}
      containers:
        # csi-provisioner: sidecar container that watches Kubernetes PersistentVolumeClaim objects
        # and triggers CreateVolume/DeleteVolume against a CSI endpoint
        - name: csi-provisioner
          resources: {{ .Values.resources | default .Values.provisioner.resources | toYaml | nindent 12 }}
          image: {{ .Values.provisioner.repository }}:{{ .Values.provisioner.tag }}
          imagePullPolicy: {{ .Values.provisioner.pullPolicy }}
          args:
            - --csi-address=/csi/csi.sock
            - --volume-name-prefix={{ .Values.volumeNamePrefix }}
            - --strict-topology
            - --immediate-topology=false
            - --feature-gates=Topology=true
          env:
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  divisor: "0"
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  divisor: "0"
                  resource: limits.cpu
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-attacher
          resources: {{ .Values.resources | default .Values.attacher.resources | toYaml | nindent 12 }}
          image: {{ .Values.attacher.repository }}:{{ .Values.attacher.tag }}
          imagePullPolicy: {{ .Values.attacher.pullPolicy }}
          args:
            - --csi-address=$(ADDRESS)
            - --v=2
            - --leader-election=true
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  divisor: "0"
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  divisor: "0"
                  resource: limits.cpu
          volumeMounts:
            - name: socket-dir
              mountPath: /csi/
        - name: csi-resizer
          resources: {{ .Values.resources | default .Values.resizer.resources | toYaml | nindent 12 }}
          image: {{ .Values.resizer.repository }}:{{ .Values.resizer.tag }}
          imagePullPolicy: {{ .Values.resizer.pullPolicy }}
          args:
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  divisor: "0"
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  divisor: "0"
                  resource: limits.cpu
          volumeMounts:
            - name: socket-dir
              mountPath: /csi/
        - name: driver
          resources: {{ .Values.resources | default .Values.image.resources | toYaml | nindent 12 }}
          securityContext:
            privileged: true
            capabilities:
              add: ['SYS_ADMIN']
            allowPrivilegeEscalation: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          args:
            - --nodeid=$(KUBE_NODE_NAME)
            - --endpoint=unix://csi/csi.sock
            - --role=controller
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  divisor: "0"
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  divisor: "0"
                  resource: limits.cpu
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: secret
              mountPath: /config
              readOnly: true
            - name: dev
              mountPath: /dev
              mountPropagation: Bidirectional
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/exa.csi.ddn.com/
            type: DirectoryOrCreate
        - name: secret
          secret:
            secretName: {{ .Values.secretName }}
        - name: dev
          hostPath:
            path: /dev
            type: Directory
---
